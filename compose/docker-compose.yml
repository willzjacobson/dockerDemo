---
version: '2.1'

services:

  mongo:
    image: mongo
    restart: always
    env_file: ./env
    expose:
      - "27017"
    networks:
      - badass
    healthcheck:
      test: ["CMD", "echo", "Good to go!"]
      interval: 5s
      timeout: 5s

  backend:
    image: willzj/demo_backend:latest
    container_name : backend
    env_file: ./env
    environment:
      - PORT=80
      - DB=admin
    ports :
      - 80:80
    networks:
      - badass
    depends_on:
      mongo:
        condition: service_healthy

  # frontend:
  #   image: willzj/demo_frontend:latest
  #   container_name : frontend
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - badass
  #   depends_on:
  #     backend:
  #       condition: service_started

networks:
  badass:
    driver: bridge


  # mailbox :
  #   image: anirray/mailbox_service:rover
  #   container_name : mailbox_${CLUSTER}
  #   env_file : ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     postgres:
  #       condition: service_started
  #   healthcheck:
  #     test: ["CMD", "echo", "Good to go!"]
  #     interval: 15s
  #     timeout: 5s
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   expose :
  #     - "80"
  #   volumes :
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # bacnet :
  #   image: anirray/bacnet_driver:rover
  #   container_name : bacnet_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}:/usr/src/app/clusters/${CLUSTER}
  # aegis:
  #   image: anirray/aegis:rover
  #   container_name: aegis_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # firecom:
  #   image: anirray/firecom:rover
  #   container_name: firecom_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # firecom_events:
  #   image: anirray/firecom:events
  #   container_name: firecom_events_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # acquilite:
  #   image: anirray/gateway_acquilite:rover
  #   container_name: acquilite_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # modbus :
  #   image: anirray/modbus:rover
  #   container_name : modbus_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     mailbox:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes:
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # kinesis :
  #   image: anirray/kinesis_producer:rover
  #   container_name : kinesis_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     - badass
  #   depends_on:
  #     fluentd:
  #       condition: service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   expose :
  #     - "80"
  #   volumes :
  #     - /usr/src/app/clusters/${CLUSTER}/pem:/usr/src/app/pem
  # postgres :
  #   image : postgres
  #   container_name: postgres_${CLUSTER}
  #   restart: always
  #   networks:
  #     - badass
  #   depends_on :
  #     fluentd :
  #       condition : service_healthy
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   logging :
  #     driver : fluentd
  #     options :
  #       fluentd-address: "${SUBNET_PREFIX}.20:${FLUENTD_PORT}"
  #       tag : "docker.dev.{{.Name}}"
  #   volumes :
  #     - ../${ENV_LEVEL}_data:/var/lib/postgresql/data
  #   expose :
  #     - "5432"
  # fluentd :
  #   image : anirray/fluentd:latest
  #   container_name : fluentd_${CLUSTER}
  #   healthcheck:
  #       test: ["CMD", "echo", "Good to go!"]
  #       interval: 15s
  #       timeout: 10s
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   expose :
  #     - "${FLUENTD_PORT}"
  #   volumes :
  #     - ./fluentd.conf:/fluentd/etc/fluentd.conf
  #   env_file: ../${ENV_FILE}
  #   networks:
  #     badass:
  #       ipv4_address: ${SUBNET_PREFIX}.20
  #   environment :
  #     - FLUENTD_CONF=fluentd.conf
  #   depends_on :
  #     - log-forwarder
  # log-forwarder :
  #   image : anirray/cloud_log_forwarder:latest
  #   container_name : log-forwarder_${CLUSTER}
  #   env_file: ../${ENV_FILE}
  #   mem_limit: 1g
  #   cpu_percent: 50
  #   networks:
  #     - badass
  #   environment:
  #     - PORT=80